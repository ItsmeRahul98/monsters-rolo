{"version":3,"sources":["components/Card/Card.js","components/CardList/CardList.js","components/SearchBox/SearchBox.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","autoFocus","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","res","json","response","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAGaA,EAAO,SAACC,GAEnB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BACHC,IAAI,QACJJ,UAAU,aAEZ,6BAAKD,EAAMG,QAAQG,OACnB,6BAAKN,EAAMG,QAAQI,YCTZC,G,MAAW,SAACR,GACvB,OACE,mCACE,yBAASC,UAAU,YAAnB,SACGD,EAAMS,SAASC,KAAI,SAACP,GAAD,OAClB,cAAC,EAAD,CAAMA,QAASA,aCNZQ,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACvC,OACE,mCACE,uBACEZ,UAAU,SACVa,WAAS,EACTC,KAAK,SACLH,YAAaA,EACbI,SAAUH,QCgCHI,E,kDArCb,aAAe,IAAD,8BACZ,gBAaFJ,aAAe,SAACK,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACXjB,KAAM,QACNG,SAAU,GACVW,YAAa,IALH,E,qDAQd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAc,EAAKT,SAAS,CAAEV,SAAUmB,S,oBAMlD,WACE,MAAkCC,KAAKN,MAA/Bd,EAAR,EAAQA,SAAUW,EAAlB,EAAkBA,YACZU,EAAmBrB,EAASsB,QAAO,SAACtB,GAAD,OACvCA,EAASH,KAAK0B,cAAcC,SAASb,EAAYY,kBAEnD,OACE,mCACE,sBAAK/B,UAAU,MAAf,UACE,oBAAIA,UAAU,UAAd,6BACA,cAAC,EAAD,CACEY,aAAcgB,KAAKhB,aACnBD,YAAY,oBAEd,cAAC,EAAD,CAAUH,SAAUqB,a,GA/BZI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b287c94a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Card.css\";\r\n\r\nexport const Card = (props) => {\r\n  // console.log(props);\r\n  return (\r\n    <div className=\"card-container\">\r\n      <img\r\n        src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\r\n        alt=\"robot\"\r\n        className=\"robotImg\"\r\n      />\r\n      <h3>{props.monster.name}</h3>\r\n      <h4>{props.monster.email}</h4>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Card } from \"../Card/Card\";\r\nimport \"./CardList.css\";\r\n\r\nexport const CardList = (props) => {\r\n  return (\r\n    <>\r\n      <section className=\"card-list\">\r\n        {props.monsters.map((monster) => (\r\n          <Card monster={monster} />\r\n        ))}\r\n        {/* {props.children} */}\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./SearchBox.css\";\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => {\r\n  return (\r\n    <>\r\n      <input\r\n        className=\"search\"\r\n        autoFocus\r\n        type=\"search\"\r\n        placeholder={placeholder}\r\n        onChange={handleChange}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import \"./App.css\";\nimport { Component } from \"react\";\nimport { CardList } from \"./components/CardList/CardList\";\nimport { SearchBox } from \"./components/SearchBox/SearchBox\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"Rahul\",\n      monsters: [],\n      searchField: \"\",\n    };\n  }\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((res) => res.json())\n      .then((response) => this.setState({ monsters: response }));\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter((monsters) =>\n      monsters.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <>\n        <div className=\"App\">\n          <h1 className=\"newFont\">Monsters palace</h1>\n          <SearchBox\n            handleChange={this.handleChange}\n            placeholder=\"Search Monsters\"\n          />\n          <CardList monsters={filteredMonsters} />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}